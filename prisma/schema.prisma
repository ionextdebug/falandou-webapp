// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  email     String
  fullName  String
  paidAt    DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model Category {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  imageURI    String
  slug        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}

model Lecture {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  slug        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}

model Magazine {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  slug        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}

model Exam {
  id          String    @id @default(auto()) @map("_id") @db.ObjectId
  name        String
  description String
  slug        String
  createdAt   DateTime  @default(now())
  updatedAt   DateTime? @updatedAt
  deletedAt   DateTime?
}

model ExamQuestion {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  name      String
  question  String
  options   String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}

model UserExam {
  id        String    @id @default(auto()) @map("_id") @db.ObjectId
  result    String
  answers   String[]
  createdAt DateTime  @default(now())
  updatedAt DateTime? @updatedAt
  deletedAt DateTime?
}
